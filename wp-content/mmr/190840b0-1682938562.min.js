/*!
 * jQuery blockUI plugin
 * Version 2.70.0-2014.11.23
 * Requires jQuery v1.7 or later
 *
 * Examples at: http://malsup.com/jquery/block/
 * Copyright (c) 2007-2013 M. Alsup
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 *
 * Thanks to Amir-Hossein Sobhi for some excellent contributions!
 */
(function () {
  "use strict";

  function setup($) {
    $.fn._fadeIn = $.fn.fadeIn;
    var noOp = $.noop || function () {};
    var msie = /MSIE/.test(navigator.userAgent);
    var ie6 =
      /MSIE 6.0/.test(navigator.userAgent) &&
      !/MSIE 8.0/.test(navigator.userAgent);
    var mode = document.documentMode || 0;
    var setExpr =
      "function" === typeof document.createElement("div").style.setExpression
        ? document.createElement("div").style.setExpression
        : !1;
    $.blockUI = function (opts) {
      install(window, opts);
    };
    $.unblockUI = function (opts) {
      remove(window, opts);
    };
    $.growlUI = function (title, message, timeout, onClose) {
      var $m = $('<div class="growlUI"></div>');
      if (title) $m.append("<h1>" + title + "</h1>");
      if (message) $m.append("<h2>" + message + "</h2>");
      if (timeout === undefined) timeout = 3000;
      var callBlock = function (opts) {
        opts = opts || {};
        $.blockUI({
          message: $m,
          fadeIn: typeof opts.fadeIn !== "undefined" ? opts.fadeIn : 700,
          fadeOut: typeof opts.fadeOut !== "undefined" ? opts.fadeOut : 1000,
          timeout: typeof opts.timeout !== "undefined" ? opts.timeout : timeout,
          centerY: !1,
          showOverlay: !1,
          onUnblock: onClose,
          css: $.blockUI.defaults.growlCSS,
        });
      };
      callBlock();
      var nonmousedOpacity = $m.css("opacity");
      $m.on("mouseover", function () {
        callBlock({
          fadeIn: 0,
          timeout: 30000,
        });
        var displayBlock = $(".blockMsg");
        displayBlock.stop();
        displayBlock.fadeTo(300, 1);
      }).on("mouseout", function () {
        $(".blockMsg").fadeOut(1000);
      });
    };
    $.fn.block = function (opts) {
      if (this[0] === window) {
        $.blockUI(opts);
        return this;
      }
      var fullOpts = $.extend({}, $.blockUI.defaults, opts || {});
      this.each(function () {
        var $el = $(this);
        if (fullOpts.ignoreIfBlocked && $el.data("blockUI.isBlocked")) return;
        $el.unblock({
          fadeOut: 0,
        });
      });
      return this.each(function () {
        if ($.css(this, "position") == "static") {
          this.style.position = "relative";
          $(this).data("blockUI.static", !0);
        }
        this.style.zoom = 1;
        install(this, opts);
      });
    };
    $.fn.unblock = function (opts) {
      if (this[0] === window) {
        $.unblockUI(opts);
        return this;
      }
      return this.each(function () {
        remove(this, opts);
      });
    };
    $.blockUI.version = 2.7;
    $.blockUI.defaults = {
      message: "<h1>Please wait...</h1>",
      title: null,
      draggable: !0,
      theme: !1,
      css: {
        padding: 0,
        margin: 0,
        width: "30%",
        top: "40%",
        left: "35%",
        textAlign: "center",
        color: "#000",
        border: "3px solid #aaa",
        backgroundColor: "#fff",
        cursor: "wait",
      },
      themedCSS: {
        width: "30%",
        top: "40%",
        left: "35%",
      },
      overlayCSS: {
        backgroundColor: "#000",
        opacity: 0.6,
        cursor: "wait",
      },
      cursorReset: "default",
      growlCSS: {
        width: "350px",
        top: "10px",
        left: "",
        right: "10px",
        border: "none",
        padding: "5px",
        opacity: 0.6,
        cursor: "default",
        color: "#fff",
        backgroundColor: "#000",
        "-webkit-border-radius": "10px",
        "-moz-border-radius": "10px",
        "border-radius": "10px",
      },
      iframeSrc: /^https/i.test(window.location.href || "")
        ? "javascript:false"
        : "about:blank",
      forceIframe: !1,
      baseZ: 1000,
      centerX: !0,
      centerY: !0,
      allowBodyStretch: !0,
      bindEvents: !0,
      constrainTabKey: !0,
      fadeIn: 200,
      fadeOut: 400,
      timeout: 0,
      showOverlay: !0,
      focusInput: !0,
      focusableElements: ":input:enabled:visible",
      onBlock: null,
      onUnblock: null,
      onOverlayClick: null,
      quirksmodeOffsetHack: 4,
      blockMsgClass: "blockMsg",
      ignoreIfBlocked: !1,
    };
    var pageBlock = null;
    var pageBlockEls = [];

    function install(el, opts) {
      var css, themedCSS;
      var full = el == window;
      var msg = opts && opts.message !== undefined ? opts.message : undefined;
      opts = $.extend({}, $.blockUI.defaults, opts || {});
      if (opts.ignoreIfBlocked && $(el).data("blockUI.isBlocked")) return;
      opts.overlayCSS = $.extend(
        {},
        $.blockUI.defaults.overlayCSS,
        opts.overlayCSS || {}
      );
      css = $.extend({}, $.blockUI.defaults.css, opts.css || {});
      if (opts.onOverlayClick) opts.overlayCSS.cursor = "pointer";
      themedCSS = $.extend(
        {},
        $.blockUI.defaults.themedCSS,
        opts.themedCSS || {}
      );
      msg = msg === undefined ? opts.message : msg;
      if (full && pageBlock)
        remove(window, {
          fadeOut: 0,
        });
      if (msg && typeof msg != "string" && (msg.parentNode || msg.jquery)) {
        var node = msg.jquery ? msg[0] : msg;
        var data = {};
        $(el).data("blockUI.history", data);
        data.el = node;
        data.parent = node.parentNode;
        data.display = node.style.display;
        data.position = node.style.position;
        if (data.parent) data.parent.removeChild(node);
      }
      $(el).data("blockUI.onUnblock", opts.onUnblock);
      var z = opts.baseZ;
      var lyr1, lyr2, lyr3, s;
      if (msie || opts.forceIframe)
        lyr1 = $(
          '<iframe class="blockUI" style="z-index:' +
            z++ +
            ';display:none;border:none;margin:0;padding:0;position:absolute;width:100%;height:100%;top:0;left:0" src="' +
            opts.iframeSrc +
            '"></iframe>'
        );
      else lyr1 = $('<div class="blockUI" style="display:none"></div>');
      if (opts.theme)
        lyr2 = $(
          '<div class="blockUI blockOverlay ui-widget-overlay" style="z-index:' +
            z++ +
            ';display:none"></div>'
        );
      else
        lyr2 = $(
          '<div class="blockUI blockOverlay" style="z-index:' +
            z++ +
            ';display:none;border:none;margin:0;padding:0;width:100%;height:100%;top:0;left:0"></div>'
        );
      if (opts.theme && full) {
        s =
          '<div class="blockUI ' +
          opts.blockMsgClass +
          ' blockPage ui-dialog ui-widget ui-corner-all" style="z-index:' +
          (z + 10) +
          ';display:none;position:fixed">';
        if (opts.title) {
          s +=
            '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' +
            (opts.title || "&nbsp;") +
            "</div>";
        }
        s += '<div class="ui-widget-content ui-dialog-content"></div>';
        s += "</div>";
      } else if (opts.theme) {
        s =
          '<div class="blockUI ' +
          opts.blockMsgClass +
          ' blockElement ui-dialog ui-widget ui-corner-all" style="z-index:' +
          (z + 10) +
          ';display:none;position:absolute">';
        if (opts.title) {
          s +=
            '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' +
            (opts.title || "&nbsp;") +
            "</div>";
        }
        s += '<div class="ui-widget-content ui-dialog-content"></div>';
        s += "</div>";
      } else if (full) {
        s =
          '<div class="blockUI ' +
          opts.blockMsgClass +
          ' blockPage" style="z-index:' +
          (z + 10) +
          ';display:none;position:fixed"></div>';
      } else {
        s =
          '<div class="blockUI ' +
          opts.blockMsgClass +
          ' blockElement" style="z-index:' +
          (z + 10) +
          ';display:none;position:absolute"></div>';
      }
      lyr3 = $(s);
      if (msg) {
        if (opts.theme) {
          lyr3.css(themedCSS);
          lyr3.addClass("ui-widget-content");
        } else lyr3.css(css);
      }
      if (!opts.theme) lyr2.css(opts.overlayCSS);
      lyr2.css("position", full ? "fixed" : "absolute");
      if (msie || opts.forceIframe) lyr1.css("opacity", 0.0);
      var layers = [lyr1, lyr2, lyr3],
        $par = full ? $("body") : $(el);
      $.each(layers, function () {
        this.appendTo($par);
      });
      if (opts.theme && opts.draggable && $.fn.draggable) {
        lyr3.draggable({
          handle: ".ui-dialog-titlebar",
          cancel: "li",
        });
      }
      var expr =
        setExpr &&
        (!$.support.boxModel || $("object,embed", full ? null : el).length > 0);
      if (ie6 || expr) {
        if (full && opts.allowBodyStretch && $.support.boxModel)
          $("html,body").css("height", "100%");
        if ((ie6 || !$.support.boxModel) && !full) {
          var t = sz(el, "borderTopWidth"),
            l = sz(el, "borderLeftWidth");
          var fixT = t ? "(0 - " + t + ")" : 0;
          var fixL = l ? "(0 - " + l + ")" : 0;
        }
        $.each(layers, function (i, o) {
          var s = o[0].style;
          s.position = "absolute";
          if (i < 2) {
            if (full)
              s.setExpression(
                "height",
                "Math.max(document.body.scrollHeight, document.body.offsetHeight) - (jQuery.support.boxModel?0:" +
                  opts.quirksmodeOffsetHack +
                  ') + "px"'
              );
            else
              s.setExpression("height", 'this.parentNode.offsetHeight + "px"');
            if (full)
              s.setExpression(
                "width",
                'jQuery.support.boxModel && document.documentElement.clientWidth || document.body.clientWidth + "px"'
              );
            else s.setExpression("width", 'this.parentNode.offsetWidth + "px"');
            if (fixL) s.setExpression("left", fixL);
            if (fixT) s.setExpression("top", fixT);
          } else if (opts.centerY) {
            if (full)
              s.setExpression(
                "top",
                '(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (blah = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"'
              );
            s.marginTop = 0;
          } else if (!opts.centerY && full) {
            var top = opts.css && opts.css.top ? parseInt(opts.css.top, 10) : 0;
            var expression =
              "((document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + " +
              top +
              ') + "px"';
            s.setExpression("top", expression);
          }
        });
      }
      if (msg) {
        if (opts.theme) lyr3.find(".ui-widget-content").append(msg);
        else lyr3.append(msg);
        if (msg.jquery || msg.nodeType) $(msg).show();
      }
      if ((msie || opts.forceIframe) && opts.showOverlay) lyr1.show();
      if (opts.fadeIn) {
        var cb = opts.onBlock ? opts.onBlock : noOp;
        var cb1 = opts.showOverlay && !msg ? cb : noOp;
        var cb2 = msg ? cb : noOp;
        if (opts.showOverlay) lyr2._fadeIn(opts.fadeIn, cb1);
        if (msg) lyr3._fadeIn(opts.fadeIn, cb2);
      } else {
        if (opts.showOverlay) lyr2.show();
        if (msg) lyr3.show();
        if (opts.onBlock) opts.onBlock.bind(lyr3)();
      }
      bind(1, el, opts);
      if (full) {
        pageBlock = lyr3[0];
        pageBlockEls = $(opts.focusableElements, pageBlock);
        if (opts.focusInput) setTimeout(focus, 20);
      } else center(lyr3[0], opts.centerX, opts.centerY);
      if (opts.timeout) {
        var to = setTimeout(function () {
          if (full) $.unblockUI(opts);
          else $(el).unblock(opts);
        }, opts.timeout);
        $(el).data("blockUI.timeout", to);
      }
    }

    function remove(el, opts) {
      var count;
      var full = el == window;
      var $el = $(el);
      var data = $el.data("blockUI.history");
      var to = $el.data("blockUI.timeout");
      if (to) {
        clearTimeout(to);
        $el.removeData("blockUI.timeout");
      }
      opts = $.extend({}, $.blockUI.defaults, opts || {});
      bind(0, el, opts);
      if (opts.onUnblock === null) {
        opts.onUnblock = $el.data("blockUI.onUnblock");
        $el.removeData("blockUI.onUnblock");
      }
      var els;
      if (full)
        els = $(document.body)
          .children()
          .filter(".blockUI")
          .add("body > .blockUI");
      else els = $el.find(">.blockUI");
      if (opts.cursorReset) {
        if (els.length > 1) els[1].style.cursor = opts.cursorReset;
        if (els.length > 2) els[2].style.cursor = opts.cursorReset;
      }
      if (full) pageBlock = pageBlockEls = null;
      if (opts.fadeOut) {
        count = els.length;
        els.stop().fadeOut(opts.fadeOut, function () {
          if (--count === 0) reset(els, data, opts, el);
        });
      } else reset(els, data, opts, el);
    }

    function reset(els, data, opts, el) {
      var $el = $(el);
      if ($el.data("blockUI.isBlocked")) return;
      els.each(function (i, o) {
        if (this.parentNode) this.parentNode.removeChild(this);
      });
      if (data && data.el) {
        data.el.style.display = data.display;
        data.el.style.position = data.position;
        data.el.style.cursor = "default";
        if (data.parent) data.parent.appendChild(data.el);
        $el.removeData("blockUI.history");
      }
      if ($el.data("blockUI.static")) {
        $el.css("position", "static");
      }
      if (typeof opts.onUnblock == "function") opts.onUnblock(el, opts);
      var body = $(document.body),
        w = body.width(),
        cssW = body[0].style.width;
      body.width(w - 1).width(w);
      body[0].style.width = cssW;
    }

    function bind(b, el, opts) {
      var full = el == window,
        $el = $(el);
      if (
        !b &&
        ((full && !pageBlock) || (!full && !$el.data("blockUI.isBlocked")))
      )
        return;
      $el.data("blockUI.isBlocked", b);
      if (!full || !opts.bindEvents || (b && !opts.showOverlay)) return;
      var events =
        "mousedown mouseup keydown keypress keyup touchstart touchend touchmove";
      if (b) $(document).on(events, opts, handler);
      else $(document).off(events, handler);
    }

    function handler(e) {
      if (e.type === "keydown" && e.keyCode && e.keyCode == 9) {
        if (pageBlock && e.data.constrainTabKey) {
          var els = pageBlockEls;
          var fwd = !e.shiftKey && e.target === els[els.length - 1];
          var back = e.shiftKey && e.target === els[0];
          if (fwd || back) {
            setTimeout(function () {
              focus(back);
            }, 10);
            return !1;
          }
        }
      }
      var opts = e.data;
      var target = $(e.target);
      if (target.hasClass("blockOverlay") && opts.onOverlayClick)
        opts.onOverlayClick(e);
      if (target.parents("div." + opts.blockMsgClass).length > 0) return !0;
      return target.parents().children().filter("div.blockUI").length === 0;
    }

    function focus(back) {
      if (!pageBlockEls) return;
      var e = pageBlockEls[back === !0 ? pageBlockEls.length - 1 : 0];
      if (e) e.trigger("focus");
    }

    function center(el, x, y) {
      var p = el.parentNode,
        s = el.style;
      var l = (p.offsetWidth - el.offsetWidth) / 2 - sz(p, "borderLeftWidth");
      var t = (p.offsetHeight - el.offsetHeight) / 2 - sz(p, "borderTopWidth");
      if (x) s.left = l > 0 ? l + "px" : "0";
      if (y) s.top = t > 0 ? t + "px" : "0";
    }

    function sz(el, p) {
      return parseInt($.css(el, p), 10) || 0;
    }
  }
  if (typeof define === "function" && define.amd && define.amd.jQuery) {
    define(["jquery"], setup);
  } else {
    setup(jQuery);
  }
})();
jQuery(function ($) {
  if (typeof wc_add_to_cart_params === "undefined") {
    return !1;
  }
  var AddToCartHandler = function () {
    this.requests = [];
    this.addRequest = this.addRequest.bind(this);
    this.run = this.run.bind(this);
    $(document.body)
      .on(
        "click",
        ".add_to_cart_button",
        {
          addToCartHandler: this,
        },
        this.onAddToCart
      )
      .on(
        "click",
        ".remove_from_cart_button",
        {
          addToCartHandler: this,
        },
        this.onRemoveFromCart
      )
      .on("added_to_cart", this.updateButton)
      .on("ajax_request_not_sent.adding_to_cart", this.updateButton)
      .on(
        "added_to_cart removed_from_cart",
        {
          addToCartHandler: this,
        },
        this.updateFragments
      );
  };
  AddToCartHandler.prototype.addRequest = function (request) {
    this.requests.push(request);
    if (1 === this.requests.length) {
      this.run();
    }
  };
  AddToCartHandler.prototype.run = function () {
    var requestManager = this,
      originalCallback = requestManager.requests[0].complete;
    requestManager.requests[0].complete = function () {
      if (typeof originalCallback === "function") {
        originalCallback();
      }
      requestManager.requests.shift();
      if (requestManager.requests.length > 0) {
        requestManager.run();
      }
    };
    $.ajax(this.requests[0]);
  };
  AddToCartHandler.prototype.onAddToCart = function (e) {
    var $thisbutton = $(this);
    if ($thisbutton.is(".ajax_add_to_cart")) {
      if (!$thisbutton.attr("data-product_id")) {
        return !0;
      }
      e.preventDefault();
      $thisbutton.removeClass("added");
      $thisbutton.addClass("loading");
      if (
        !1 ===
        $(document.body).triggerHandler(
          "should_send_ajax_request.adding_to_cart",
          [$thisbutton]
        )
      ) {
        $(document.body).trigger("ajax_request_not_sent.adding_to_cart", [
          !1,
          !1,
          $thisbutton,
        ]);
        return !0;
      }
      var data = {};
      $.each($thisbutton.data(), function (key, value) {
        data[key] = value;
      });
      $.each($thisbutton[0].dataset, function (key, value) {
        data[key] = value;
      });
      $(document.body).trigger("adding_to_cart", [$thisbutton, data]);
      e.data.addToCartHandler.addRequest({
        type: "POST",
        url: wc_add_to_cart_params.wc_ajax_url
          .toString()
          .replace("%%endpoint%%", "add_to_cart"),
        data: data,
        success: function (response) {
          if (!response) {
            return;
          }
          if (response.error && response.product_url) {
            window.location = response.product_url;
            return;
          }
          if (wc_add_to_cart_params.cart_redirect_after_add === "yes") {
            window.location = wc_add_to_cart_params.cart_url;
            return;
          }
          $(document.body).trigger("added_to_cart", [
            response.fragments,
            response.cart_hash,
            $thisbutton,
          ]);
        },
        dataType: "json",
      });
    }
  };
  AddToCartHandler.prototype.onRemoveFromCart = function (e) {
    var $thisbutton = $(this),
      $row = $thisbutton.closest(".woocommerce-mini-cart-item");
    e.preventDefault();
    $row.block({
      message: null,
      overlayCSS: {
        opacity: 0.6,
      },
    });
    e.data.addToCartHandler.addRequest({
      type: "POST",
      url: wc_add_to_cart_params.wc_ajax_url
        .toString()
        .replace("%%endpoint%%", "remove_from_cart"),
      data: {
        cart_item_key: $thisbutton.data("cart_item_key"),
      },
      success: function (response) {
        if (!response || !response.fragments) {
          window.location = $thisbutton.attr("href");
          return;
        }
        $(document.body).trigger("removed_from_cart", [
          response.fragments,
          response.cart_hash,
          $thisbutton,
        ]);
      },
      error: function () {
        window.location = $thisbutton.attr("href");
        return;
      },
      dataType: "json",
    });
  };
  AddToCartHandler.prototype.updateButton = function (
    e,
    fragments,
    cart_hash,
    $button
  ) {
    $button = typeof $button === "undefined" ? !1 : $button;
    if ($button) {
      $button.removeClass("loading");
      if (fragments) {
        $button.addClass("added");
      }
      if (
        fragments &&
        !wc_add_to_cart_params.is_cart &&
        $button.parent().find(".added_to_cart").length === 0
      ) {
        $button.after(
          '<a href="' +
            wc_add_to_cart_params.cart_url +
            '" class="added_to_cart wc-forward" title="' +
            wc_add_to_cart_params.i18n_view_cart +
            '">' +
            wc_add_to_cart_params.i18n_view_cart +
            "</a>"
        );
      }
      $(document.body).trigger("wc_cart_button_updated", [$button]);
    }
  };
  AddToCartHandler.prototype.updateFragments = function (e, fragments) {
    if (fragments) {
      $.each(fragments, function (key) {
        $(key)
          .addClass("updating")
          .fadeTo("400", "0.6")
          .block({
            message: null,
            overlayCSS: {
              opacity: 0.6,
            },
          });
      });
      $.each(fragments, function (key, value) {
        $(key).replaceWith(value);
        $(key).stop(!0).css("opacity", "1").unblock();
      });
      $(document.body).trigger("wc_fragments_loaded");
    }
  };
  new AddToCartHandler();
});
/*!
 * JavaScript Cookie v2.1.4
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */
(function (factory) {
  var registeredInModuleLoader = !1;
  if (typeof define === "function" && define.amd) {
    define(factory);
    registeredInModuleLoader = !0;
  }
  if (typeof exports === "object") {
    module.exports = factory();
    registeredInModuleLoader = !0;
  }
  if (!registeredInModuleLoader) {
    var OldCookies = window.Cookies;
    var api = (window.Cookies = factory());
    api.noConflict = function () {
      window.Cookies = OldCookies;
      return api;
    };
  }
})(function () {
  function extend() {
    var i = 0;
    var result = {};
    for (; i < arguments.length; i++) {
      var attributes = arguments[i];
      for (var key in attributes) {
        result[key] = attributes[key];
      }
    }
    return result;
  }

  function init(converter) {
    function api(key, value, attributes) {
      var result;
      if (typeof document === "undefined") {
        return;
      }
      if (arguments.length > 1) {
        attributes = extend(
          {
            path: "/",
          },
          api.defaults,
          attributes
        );
        if (typeof attributes.expires === "number") {
          var expires = new Date();
          expires.setMilliseconds(
            expires.getMilliseconds() + attributes.expires * 864e5
          );
          attributes.expires = expires;
        }
        attributes.expires = attributes.expires
          ? attributes.expires.toUTCString()
          : "";
        try {
          result = JSON.stringify(value);
          if (/^[\{\[]/.test(result)) {
            value = result;
          }
        } catch (e) {}
        if (!converter.write) {
          value = encodeURIComponent(String(value)).replace(
            /%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,
            decodeURIComponent
          );
        } else {
          value = converter.write(value, key);
        }
        key = encodeURIComponent(String(key));
        key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);
        key = key.replace(/[\(\)]/g, escape);
        var stringifiedAttributes = "";
        for (var attributeName in attributes) {
          if (!attributes[attributeName]) {
            continue;
          }
          stringifiedAttributes += "; " + attributeName;
          if (attributes[attributeName] === !0) {
            continue;
          }
          stringifiedAttributes += "=" + attributes[attributeName];
        }
        return (document.cookie = key + "=" + value + stringifiedAttributes);
      }
      if (!key) {
        result = {};
      }
      var cookies = document.cookie ? document.cookie.split("; ") : [];
      var rdecode = /(%[0-9A-Z]{2})+/g;
      var i = 0;
      for (; i < cookies.length; i++) {
        var parts = cookies[i].split("=");
        var cookie = parts.slice(1).join("=");
        if (cookie.charAt(0) === '"') {
          cookie = cookie.slice(1, -1);
        }
        try {
          var name = parts[0].replace(rdecode, decodeURIComponent);
          cookie = converter.read
            ? converter.read(cookie, name)
            : converter(cookie, name) ||
              cookie.replace(rdecode, decodeURIComponent);
          if (this.json) {
            try {
              cookie = JSON.parse(cookie);
            } catch (e) {}
          }
          if (key === name) {
            result = cookie;
            break;
          }
          if (!key) {
            result[name] = cookie;
          }
        } catch (e) {}
      }
      return result;
    }
    api.set = api;
    api.get = function (key) {
      return api.call(api, key);
    };
    api.getJSON = function () {
      return api.apply(
        {
          json: !0,
        },
        [].slice.call(arguments)
      );
    };
    api.defaults = {};
    api.remove = function (key, attributes) {
      api(
        key,
        "",
        extend(attributes, {
          expires: -1,
        })
      );
    };
    api.withConverter = init;
    return api;
  }
  return init(function () {});
});
jQuery(function ($) {
  $(".woocommerce-ordering").on("change", "select.orderby", function () {
    $(this).closest("form").trigger("submit");
  });
  $("input.qty:not(.product-quantity input.qty)").each(function () {
    var min = parseFloat($(this).attr("min"));
    if (min >= 0 && parseFloat($(this).val()) < min) {
      $(this).val(min);
    }
  });
  var noticeID = $(".woocommerce-store-notice").data("noticeId") || "",
    cookieName = "store_notice" + noticeID;
  if ("hidden" === Cookies.get(cookieName)) {
    $(".woocommerce-store-notice").hide();
  } else {
    $(".woocommerce-store-notice").show();
  }
  $(".woocommerce-store-notice__dismiss-link").on("click", function (event) {
    Cookies.set(cookieName, "hidden", {
      path: "/",
    });
    $(".woocommerce-store-notice").hide();
    event.preventDefault();
  });
  if ($(".woocommerce-input-wrapper span.description").length) {
    $(document.body).on("click", function () {
      $(".woocommerce-input-wrapper span.description:visible")
        .prop("aria-hidden", !0)
        .slideUp(250);
    });
  }
  $(".woocommerce-input-wrapper").on("click", function (event) {
    event.stopPropagation();
  });
  $(".woocommerce-input-wrapper :input")
    .on("keydown", function (event) {
      var input = $(this),
        parent = input.parent(),
        description = parent.find("span.description");
      if (
        27 === event.which &&
        description.length &&
        description.is(":visible")
      ) {
        description.prop("aria-hidden", !0).slideUp(250);
        event.preventDefault();
        return !1;
      }
    })
    .on("click focus", function () {
      var input = $(this),
        parent = input.parent(),
        description = parent.find("span.description");
      parent.addClass("currentTarget");
      $(
        ".woocommerce-input-wrapper:not(.currentTarget) span.description:visible"
      )
        .prop("aria-hidden", !0)
        .slideUp(250);
      if (description.length && description.is(":hidden")) {
        description.prop("aria-hidden", !1).slideDown(250);
      }
      parent.removeClass("currentTarget");
    });
  $.scroll_to_notices = function (scrollElement) {
    if (scrollElement.length) {
      $("html, body").animate(
        {
          scrollTop: scrollElement.offset().top - 100,
        },
        1000
      );
    }
  };
  $('.woocommerce form .woocommerce-Input[type="password"]').wrap(
    '<span class="password-input"></span>'
  );
  $(".woocommerce form input")
    .filter(":password")
    .parent("span")
    .addClass("password-input");
  $(".password-input").append('<span class="show-password-input"></span>');
  $(".show-password-input").on("click", function () {
    if ($(this).hasClass("display-password")) {
      $(this).removeClass("display-password");
    } else {
      $(this).addClass("display-password");
    }
    if ($(this).hasClass("display-password")) {
      $(this).siblings(['input[type="password"]']).prop("type", "text");
    } else {
      $(this).siblings('input[type="text"]').prop("type", "password");
    }
  });
});
jQuery(function ($) {
  if (typeof wc_cart_fragments_params === "undefined") {
    return !1;
  }
  var $supports_html5_storage = !0,
    cart_hash_key = wc_cart_fragments_params.cart_hash_key;
  try {
    $supports_html5_storage =
      "sessionStorage" in window && window.sessionStorage !== null;
    window.sessionStorage.setItem("wc", "test");
    window.sessionStorage.removeItem("wc");
    window.localStorage.setItem("wc", "test");
    window.localStorage.removeItem("wc");
  } catch (err) {
    $supports_html5_storage = !1;
  }

  function set_cart_creation_timestamp() {
    if ($supports_html5_storage) {
      sessionStorage.setItem("wc_cart_created", new Date().getTime());
    }
  }

  function set_cart_hash(cart_hash) {
    if ($supports_html5_storage) {
      localStorage.setItem(cart_hash_key, cart_hash);
      sessionStorage.setItem(cart_hash_key, cart_hash);
    }
  }
  var $fragment_refresh = {
    url: wc_cart_fragments_params.wc_ajax_url
      .toString()
      .replace("%%endpoint%%", "get_refreshed_fragments"),
    type: "POST",
    data: {
      time: new Date().getTime(),
    },
    timeout: wc_cart_fragments_params.request_timeout,
    success: function (data) {
      if (data && data.fragments) {
        $.each(data.fragments, function (key, value) {
          $(key).replaceWith(value);
        });
        if ($supports_html5_storage) {
          sessionStorage.setItem(
            wc_cart_fragments_params.fragment_name,
            JSON.stringify(data.fragments)
          );
          set_cart_hash(data.cart_hash);
          if (data.cart_hash) {
            set_cart_creation_timestamp();
          }
        }
        $(document.body).trigger("wc_fragments_refreshed");
      }
    },
    error: function () {
      $(document.body).trigger("wc_fragments_ajax_error");
    },
  };

  function refresh_cart_fragment() {
    $.ajax($fragment_refresh);
  }
  if ($supports_html5_storage) {
    var cart_timeout = null,
      day_in_ms = 24 * 60 * 60 * 1000;
    $(document.body).on("wc_fragment_refresh updated_wc_div", function () {
      refresh_cart_fragment();
    });
    $(document.body).on(
      "added_to_cart removed_from_cart",
      function (event, fragments, cart_hash) {
        var prev_cart_hash = sessionStorage.getItem(cart_hash_key);
        if (
          prev_cart_hash === null ||
          prev_cart_hash === undefined ||
          prev_cart_hash === ""
        ) {
          set_cart_creation_timestamp();
        }
        sessionStorage.setItem(
          wc_cart_fragments_params.fragment_name,
          JSON.stringify(fragments)
        );
        set_cart_hash(cart_hash);
      }
    );
    $(document.body).on("wc_fragments_refreshed", function () {
      clearTimeout(cart_timeout);
      cart_timeout = setTimeout(refresh_cart_fragment, day_in_ms);
    });
    $(window).on("storage onstorage", function (e) {
      if (
        cart_hash_key === e.originalEvent.key &&
        localStorage.getItem(cart_hash_key) !==
          sessionStorage.getItem(cart_hash_key)
      ) {
        refresh_cart_fragment();
      }
    });
    $(window).on("pageshow", function (e) {
      if (e.originalEvent.persisted) {
        $(".widget_shopping_cart_content").empty();
        $(document.body).trigger("wc_fragment_refresh");
      }
    });
    try {
      var wc_fragments = JSON.parse(
          sessionStorage.getItem(wc_cart_fragments_params.fragment_name)
        ),
        cart_hash = sessionStorage.getItem(cart_hash_key),
        cookie_hash = Cookies.get("woocommerce_cart_hash"),
        cart_created = sessionStorage.getItem("wc_cart_created");
      if (cart_hash === null || cart_hash === undefined || cart_hash === "") {
        cart_hash = "";
      }
      if (
        cookie_hash === null ||
        cookie_hash === undefined ||
        cookie_hash === ""
      ) {
        cookie_hash = "";
      }
      if (
        cart_hash &&
        (cart_created === null ||
          cart_created === undefined ||
          cart_created === "")
      ) {
        throw "No cart_created";
      }
      if (cart_created) {
        var cart_expiration = 1 * cart_created + day_in_ms,
          timestamp_now = new Date().getTime();
        if (cart_expiration < timestamp_now) {
          throw "Fragment expired";
        }
        cart_timeout = setTimeout(
          refresh_cart_fragment,
          cart_expiration - timestamp_now
        );
      }
      if (
        wc_fragments &&
        wc_fragments["div.widget_shopping_cart_content"] &&
        cart_hash === cookie_hash
      ) {
        $.each(wc_fragments, function (key, value) {
          $(key).replaceWith(value);
        });
        $(document.body).trigger("wc_fragments_loaded");
      } else {
        throw "No fragment";
      }
    } catch (err) {
      refresh_cart_fragment();
    }
  } else {
    refresh_cart_fragment();
  }
  if (Cookies.get("woocommerce_items_in_cart") > 0) {
    $(".hide_cart_widget_if_empty").closest(".widget_shopping_cart").show();
  } else {
    $(".hide_cart_widget_if_empty").closest(".widget_shopping_cart").hide();
  }
  $(document.body).on("adding_to_cart", function () {
    $(".hide_cart_widget_if_empty").closest(".widget_shopping_cart").show();
  });
  var hasSelectiveRefresh =
    "undefined" !== typeof wp &&
    wp.customize &&
    wp.customize.selectiveRefresh &&
    wp.customize.widgetsPreview &&
    wp.customize.widgetsPreview.WidgetPartial;
  if (hasSelectiveRefresh) {
    wp.customize.selectiveRefresh.bind("partial-content-rendered", function () {
      refresh_cart_fragment();
    });
  }
});
!(function (e) {
  if (!e.hasInitialised) {
    var t = {
      escapeRegExp: function (e) {
        return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
      },
      hasClass: function (e, t) {
        var i = " ";
        return (
          1 === e.nodeType &&
          (i + e.className + i).replace(/[\n\t]/g, i).indexOf(i + t + i) >= 0
        );
      },
      addClass: function (e, t) {
        e.className += " " + t;
      },
      removeClass: function (e, t) {
        var i = new RegExp("\\b" + this.escapeRegExp(t) + "\\b");
        e.className = e.className.replace(i, "");
      },
      interpolateString: function (e, t) {
        return e.replace(/{{([a-z][a-z0-9\-_]*)}}/gi, function (e) {
          return t(arguments[1]) || "";
        });
      },
      getCookie: function (e) {
        var t = ("; " + document.cookie).split("; " + e + "=");
        return t.length < 2 ? void 0 : t.pop().split(";").shift();
      },
      setCookie: function (e, t, i, o, s, n) {
        var a = new Date();
        a.setHours(a.getHours() + 24 * (i || 365));
        var c = [
          e + "=" + t,
          "expires=" + a.toUTCString(),
          "samesite=lax;path=" + (s || "/"),
        ];
        o && c.push("domain=" + o),
          n && c.push("secure"),
          (document.cookie = c.join(";"));
      },
      deepExtend: function (e, t) {
        for (var i in t)
          t.hasOwnProperty(i) &&
            (i in e && this.isPlainObject(e[i]) && this.isPlainObject(t[i])
              ? this.deepExtend(e[i], t[i])
              : (e[i] = t[i]));
        return e;
      },
      throttle: function (e, t) {
        var i = !1;
        return function () {
          i ||
            (e.apply(this, arguments),
            (i = !0),
            setTimeout(function () {
              i = !1;
            }, t));
        };
      },
      hash: function (e) {
        var t,
          i,
          o = 0;
        if (0 === e.length) return o;
        for (t = 0, i = e.length; t < i; ++t)
          (o = (o << 5) - o + e.charCodeAt(t)), (o |= 0);
        return o;
      },
      normaliseHex: function (e) {
        return (
          "#" == e[0] && (e = e.substr(1)),
          3 == e.length && (e = e[0] + e[0] + e[1] + e[1] + e[2] + e[2]),
          e
        );
      },
      getContrast: function (e) {
        return (
          (e = this.normaliseHex(e)),
          (299 * parseInt(e.substr(0, 2), 16) +
            587 * parseInt(e.substr(2, 2), 16) +
            114 * parseInt(e.substr(4, 2), 16)) /
            1e3 >=
          128
            ? "#000"
            : "#fff"
        );
      },
      getLuminance: function (e) {
        var t = parseInt(this.normaliseHex(e), 16),
          i = 38 + (t >> 16),
          o = 38 + ((t >> 8) & 255),
          s = 38 + (255 & t);
        return (
          "#" +
          (
            16777216 +
            65536 * (i < 255 ? (i < 1 ? 0 : i) : 255) +
            256 * (o < 255 ? (o < 1 ? 0 : o) : 255) +
            (s < 255 ? (s < 1 ? 0 : s) : 255)
          )
            .toString(16)
            .slice(1)
        );
      },
      isMobile: function () {
        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
          navigator.userAgent
        );
      },
      isPlainObject: function (e) {
        return "object" == typeof e && null !== e && e.constructor == Object;
      },
      traverseDOMPath: function (e, i) {
        return e && e.parentNode
          ? t.hasClass(e, i)
            ? e
            : this.traverseDOMPath(e.parentNode, i)
          : null;
      },
    };
    (e.status = {
      deny: "deny",
      allow: "allow",
      dismiss: "dismiss",
      allowall: "allowall",
      savesettings: "savesettings",
      detailed: "detailed",
      close: "close",
      discard: "discard",
    }),
      (e.transitionEnd = (function () {
        var e = document.createElement("div"),
          t = {
            t: "transitionend",
            OT: "oTransitionEnd",
            msT: "MSTransitionEnd",
            MozT: "transitionend",
            WebkitT: "webkitTransitionEnd",
          };
        for (var i in t)
          if (t.hasOwnProperty(i) && void 0 !== e.style[i + "ransition"])
            return t[i];
        return "";
      })()),
      (e.hasTransition = !!e.transitionEnd);
    var i = Object.keys(e.status).map(t.escapeRegExp);
    (e.customStyles = {}),
      (e.Popup = (function () {
        var o = {
          enabled: !0,
          container: null,
          cookie: {
            name: "cookieconsent_status",
            path: "/",
            domain: "",
            expiryDays: 365,
            secure: !1,
          },
          onPopupOpen: function () {},
          onPopupClose: function () {},
          onInitialise: function (e) {},
          onStatusChange: function (e, t) {},
          onRevokeChoice: function () {},
          onNoCookieLaw: function (e, t) {},
          content: {
            header: "Cookies used on the website!",
            message:
              "This website uses cookies to ensure you get the best experience on our website.",
            dismiss: "Got it!",
            allow: "Allow cookies",
            deny: "Decline",
            savesettings: "Save Settings",
            link: "Learn more",
            href: "https://www.cookiesandyou.com",
            close: "x",
            target: "_blank",
            policy: "Cookie Policy",
          },
          elements: {
            header: '<span class="cc-header">{{header}}</span>&nbsp;',
            message:
              '<span id="cookieconsent:desc" class="cc-message">{{message}}</span>',
            messagelink:
              '<span id="cookieconsent:desc" class="cc-message">{{message}} <a aria-label="learn more about cookies" role=button tabindex="0" class="cc-link" href="{{href}}" rel="noopener noreferrer nofollow" target="{{target}}">{{link}}</a></span>',
            messageswitchlink:
              '<span id="cookieconsent:desc" class="cc-message">{{message}} <a aria-label="learn more about cookies" role=button tabindex="0" class="cc-link" href="{{href}}" rel="noopener noreferrer nofollow" target="{{target}}">{{link}}</a><div class="cc-allswitches {{allswitchesclasses}}">{{allswitches}}</div></span>',
            dismiss:
              '<a aria-label="dismiss cookie message" role=button tabindex="0" class="cc-btn cc-dismiss">{{dismiss}}</a>',
            allow:
              '<a aria-label="allow cookies" role=button tabindex="0"  class="cc-btn cc-allow">{{allow}}</a>',
            deny: '<a aria-label="deny cookies" role=button tabindex="0" class="cc-btn cc-deny">{{deny}}</a>',
            savesettings:
              '<a aria-label="deny cookies" role=button tabindex="0"  class="cc-btn cc-savesettings">{{savesettings}}</a>',
            allowall:
              '<a aria-label="deny cookies" role=button tabindex="0"  class="cc-btn cc-allowall">{{allow}}</a>',
            link: '<a aria-label="learn more about cookies" role=button tabindex="0" class="cc-link" href="{{href}}" rel="noopener noreferrer nofollow" target="{{target}}">{{link}}</a>',
            close:
              '<span aria-label="dismiss cookie message" role=button tabindex="0" class="cc-close">{{close}}</span>',
            closeCustomText:
              '<span aria-label="dismiss cookie message" role=button tabindex="0" class="cc-close cc-closeXcustomText">{{close}}</span>',
            switch:
              '<span class="cc-switch-element"><label id="{{cc-cookietype-id}}" class="cc-switch"><input id="{{cc-cookietype-id}}" type="checkbox" {{checked}} {{disabled}}><span class="cc-slider {{theme}} {{disabled}}"></span></label><span class="cc-switch-label">{{label}}</span></span></span>',
          },
          window:
            '<div role="dialog" aria-live="polite" aria-label="cookieconsent" aria-describedby="cookieconsent:desc" class="cc-window {{classes}}">\x3c!--googleoff: all--\x3e{{children}}\x3c!--googleon: all--\x3e</div>',
          revokeBtn: '<div class="cc-revoke {{classes}}">{{policy}}</div>',
          blockingScreen: '<div class="cc-blockingScreen"></div>',
          blockScreen: !1,
          makeButtonsEqual: !1,
          buttonOrderAllowFirst: !1,
          compliance: {
            info: '<div class="cc-compliance">{{dismiss}}</div>',
            "opt-in":
              '<div class="cc-compliance cc-highlight">{{deny}}{{allow}}</div>',
            "opt-out":
              '<div class="cc-compliance cc-highlight">{{deny}}{{allow}}</div>',
            detailed: '<div class="cc-compliance">{{savesettings}}</div>',
            detailedRev:
              '<div class="cc-compliance cc-highlight">{{savesettings}}{{allowall}}</div>',
          },
          type: "info",
          layouts: {
            basic: "{{messagelink}}{{compliance}}",
            "basic-close": "{{messagelink}}{{compliance}}{{close}}",
            "basic-closeCustomText":
              "{{messagelink}}{{compliance}}{{closeCustomText}}",
            "basic-header": "{{header}}{{message}}{{link}}{{compliance}}",
            detailed: "{{messageswitchlink}}{{compliance}}",
            "detailed-close": "{{messageswitchlink}}{{compliance}}{{close}}",
            "detailed-closeCustomText":
              "{{messageswitchlink}}{{compliance}}{{closeCustomText}}",
          },
          cookietypes: null,
          statsUrl: null,
          statsSendOnOpen: !1,
          statsCountOpens: !1,
          layout: "basic",
          position: "bottom",
          theme: "block",
          static: !1,
          palette: null,
          revokable: !0,
          animateRevokable: !0,
          showLink: !0,
          dismissOnScroll: !1,
          dismissOnTimeout: !1,
          dismissOnWindowClick: !1,
          ignoreClicksFrom: ["cc-revoke", "cc-btn"],
          autoOpen: !0,
          autoAttach: !0,
          forceToAppend: !0,
          whitelistPage: [],
          blacklistPage: [],
          disableWithiniFrames: "0",
          overrideHTML: null,
          closeXClickStatus: "default",
        };

        function s() {
          this.initialise.apply(this, arguments);
        }

        function n() {
          var e;
          try {
            (e = localStorage.getItem("beautiful_cookie_banner_open_counter")),
              (e = parseInt(e, 10));
          } catch (e) {
            return console.error(e), 0;
          }
          return ("number" != typeof e || isNaN(e)) && (e = 0), e;
        }

        function a(e) {
          (this.openingTimeout = null), t.removeClass(e, "cc-invisible");
        }

        function c(t) {
          (t.style.display = "none"),
            t.removeEventListener(e.transitionEnd, this.afterTransition),
            (this.afterTransition = null);
        }

        function l() {
          var e = this.options.position.split("-"),
            t = [];
          return (
            e.forEach(function (e) {
              t.push("cc-" + e);
            }),
            t
          );
        }

        function r() {
          var e = this.options,
            i =
              "top" == e.position || "bottom" == e.position
                ? "banner"
                : "floating";
          return t.isMobile() && (i = "floating"), i;
        }

        function h(e) {
          var t = n.call(this);
          return {
            href: window.location.href,
            referrer: document.referrer,
            cookieName: this.options.cookie.name,
            mainStatus: e,
            openCount: t,
            cookieTypeConsent: [],
          };
        }

        function u(e) {
          if (this.options.statsUrl)
            try {
              var t = new XMLHttpRequest();
              (t.withCredentials = !1),
                t.open("POST", this.options.statsUrl),
                t.setRequestHeader("Content-Type", "application/json"),
                t.send(JSON.stringify(e));
            } catch (e) {
              console.error(e);
            }
        }

        function p(o) {
          var s = this.options,
            n = document.createElement("div");
          let a = !1;
          var c;
          s.container && 1 === s.container.nodeType
            ? (c = s.container)
            : ((c = document.body), (a = !0)),
            (n.innerHTML = o);
          var l = n.children[0];
          return (
            (l.style.display = "none"),
            t.hasClass(l, "cc-window") &&
              e.hasTransition &&
              t.addClass(l, "cc-invisible"),
            (this.onButtonClick = function (o) {
              if ("keyup" === o.type && 13 !== o.keyCode) return;
              var s = t.traverseDOMPath(o.target, "cc-btn") || o.target;
              if (t.hasClass(s, "cc-btn")) {
                var n = s.className.match(
                    new RegExp("\\bcc-(" + i.join("|") + ")\\b")
                  ),
                  a = (n && n[1]) || !1;
                if (
                  "dismiss" === a &&
                  "default" !== this.options.infoClickStatus &&
                  e.status.hasOwnProperty(this.options.infoClickStatus)
                )
                  return (
                    this.setStatus(this.options.infoClickStatus),
                    void this.close(!0)
                  );
                a && (this.setStatus(a), this.close(!0));
              }
              t.hasClass(s, "cc-close") &&
                "default" !== this.options.closeXClickStatus &&
                e.status.hasOwnProperty(this.options.closeXClickStatus) &&
                (this.setStatus(this.options.closeXClickStatus),
                this.close(!0));
              t.hasClass(s, "cc-close") &&
                "opt-out" === this.options.type &&
                "default" === this.options.closeXClickStatus &&
                (this.setStatus(e.status.allow), this.close(!0));
              t.hasClass(s, "cc-close") &&
                "detailed" === this.options.type &&
                "default" === this.options.closeXClickStatus &&
                (this.setStatus(e.status.savesettings), this.close(!0));
              t.hasClass(s, "cc-close") &&
                "detailedRev" === this.options.type &&
                "default" === this.options.closeXClickStatus &&
                (this.setStatus(e.status.savesettings), this.close(!0));
              t.hasClass(s, "cc-close") &&
                "opt-in" === this.options.type &&
                "default" === this.options.closeXClickStatus &&
                (this.setStatus(e.status.deny), this.close(!0));
              t.hasClass(s, "cc-close") &&
                "info" === this.options.type &&
                "default" === this.options.closeXClickStatus &&
                (this.setStatus(e.status.allow), this.close(!0));
              t.hasClass(s, "cc-revoke") && this.revokeChoice();
            }.bind(this)),
            l.addEventListener("click", this.onButtonClick),
            l.addEventListener("keyup", this.onButtonClick),
            s.autoAttach &&
              (!c.firstChild || (s.forceToAppend && a)
                ? c.appendChild(l)
                : c.insertBefore(l, c.firstChild)),
            l
          );
        }

        function d(e) {
          return "000000" == (e = t.normaliseHex(e))
            ? "#222"
            : t.getLuminance(e);
        }

        function f(e, t) {
          for (var i = 0, o = e.length; i < o; ++i) {
            var s = e[i];
            if (
              (s instanceof RegExp && s.test(t)) ||
              ("string" == typeof s && s.length && s === t)
            )
              return !0;
          }
          return !1;
        }
        return (
          (s.prototype.initialise = function (i) {
            if (
              (this.options && this.destroy(),
              t.deepExtend((this.options = {}), o),
              t.isPlainObject(i) && t.deepExtend(this.options, i),
              "1" !== this.options.disableWithiniFrames ||
                !0 !==
                  (function () {
                    var e,
                      t = window.location.href;
                    try {
                      e = window.parent.location.href;
                    } catch (e) {}
                    return !e || t !== e;
                  })())
            ) {
              !0 === this.options.buttonOrderAllowFirst &&
                ((this.options.compliance["opt-in"] =
                  '<div class="cc-compliance cc-first-highlight">{{allow}}{{deny}}</div>'),
                (this.options.compliance["opt-out"] =
                  '<div class="cc-compliance cc-first-highlight">{{allow}}{{deny}}</div>'),
                (this.options.compliance.detailedRev =
                  '<div class="cc-compliance cc-first-highlight">{{allowall}}{{savesettings}}</div>')),
                function () {
                  var t = this.options.onInitialise.bind(this);
                  if (!window.navigator.cookieEnabled)
                    return t(e.status.deny), !0;
                  if (window.CookiesOK || window.navigator.CookiesOK)
                    return t(e.status.allow), !0;
                  var i = Object.keys(e.status),
                    o = this.getStatus(),
                    s = i.indexOf(o) >= 0;
                  s && t(o);
                  return s;
                }.call(this) && (this.options.enabled = !1),
                f(this.options.blacklistPage, location.pathname) &&
                  (this.options.enabled = !1),
                f(this.options.whitelistPage, location.pathname) &&
                  (this.options.enabled = !0);
              var s = this.options.window
                .replace(
                  "{{classes}}",
                  function () {
                    var i = this.options;
                    positionStyle = r.call(this);
                    var o = [
                      "cc-" + positionStyle,
                      "cc-type-" + i.type,
                      "cc-theme-" + i.theme,
                    ];
                    i.static && o.push("cc-static");
                    i.showCloseX && o.push("cc-addedcloseX");
                    o.push.apply(o, l.call(this));
                    (function (i, o) {
                      var s = t.hash(JSON.stringify(i)),
                        n = "cc-color-override-" + s,
                        a = t.isPlainObject(i);
                      (this.customStyleSelector = a ? n : null),
                        a &&
                          (function (i, o, s, n) {
                            if (e.customStyles[i])
                              return void ++e.customStyles[i].references;
                            var a = {},
                              c = o.popup,
                              l = o.button,
                              r = o.highlight,
                              h = o.switches;
                            c &&
                              ((c.text = c.text
                                ? c.text
                                : t.getContrast(c.background)),
                              (c.link = c.link ? c.link : c.text),
                              (a[s + ".cc-window"] = [
                                "color: " + c.text,
                                "background-color: " + c.background,
                              ]),
                              (a[s + ".cc-revoke"] = [
                                "color: " + c.text,
                                "background-color: " + c.background,
                              ]),
                              (a[
                                s +
                                  " .cc-link," +
                                  s +
                                  " .cc-link:active," +
                                  s +
                                  " .cc-link:visited"
                              ] = ["color: " + c.link]),
                              l &&
                                ((l.text = l.text
                                  ? l.text
                                  : t.getContrast(l.background)),
                                (l.border = l.border
                                  ? l.border
                                  : "transparent"),
                                (a[s + " .cc-btn"] = [
                                  "color: " + l.text,
                                  "border-color: " + l.border,
                                  "background-color: " + l.background,
                                ]),
                                l.padding &&
                                  a[s + " .cc-btn"].push(
                                    "padding: " + l.padding
                                  ),
                                "transparent" != l.background &&
                                  (a[
                                    s +
                                      " .cc-btn:hover, " +
                                      s +
                                      " .cc-btn:focus"
                                  ] = [
                                    "background-color: " +
                                      (l.hover || d(l.background)),
                                  ]),
                                r
                                  ? ((r.text = r.text
                                      ? r.text
                                      : t.getContrast(r.background)),
                                    (r.border = r.border
                                      ? r.border
                                      : "transparent"),
                                    (a[
                                      s + " .cc-highlight .cc-btn:first-child"
                                    ] = [
                                      "color: " + r.text,
                                      "border-color: " + r.border,
                                      "background-color: " + r.background,
                                    ]))
                                  : !0 === n
                                  ? (a[
                                      s +
                                        " .cc-first-highlight .cc-btn:last-child"
                                    ] = ["color: " + c.text])
                                  : (a[
                                      s + " .cc-highlight .cc-btn:first-child"
                                    ] = ["color: " + c.text])));
                            h &&
                              ((a[".cc-slider"] = [
                                "background-color: " +
                                  h.background +
                                  "!important",
                              ]),
                              (a[".cc-slider:before"] = [
                                "background-color: " + h.switch + "!important",
                              ]),
                              (a[".cc-switch-label"] = ["color: " + h.text]),
                              (a["input:checked+.cc-slider"] = [
                                "background-color: " +
                                  h.backgroundChecked +
                                  "!important",
                              ]),
                              (a["input:focus+.cc-slider"] = [
                                "background-color: " +
                                  h.backgroundChecked +
                                  "!important",
                              ]));
                            var u = document.createElement("style");
                            document.head.appendChild(u),
                              (e.customStyles[i] = {
                                references: 1,
                                element: u.sheet,
                              });
                            var p = -1;
                            for (var f in a)
                              a.hasOwnProperty(f) &&
                                u.sheet.insertRule(
                                  f + "{" + a[f].join(";") + "}",
                                  ++p
                                );
                          })(s, i, "." + n, o);
                      return a;
                    }).call(
                      this,
                      this.options.palette,
                      this.options.buttonOrderAllowFirst
                    );
                    this.customStyleSelector &&
                      o.push(this.customStyleSelector);
                    return o;
                  }
                    .call(this)
                    .join(" ")
                )
                .replace(
                  "{{children}}",
                  function () {
                    var e = {},
                      i = this.options;
                    i.showLink ||
                      ((i.elements.link = ""),
                      (i.elements.messagelink = i.elements.message));
                    if (i.cookietypes) {
                      var o = "",
                        s = this.options.cookie;
                      i.cookietypes.forEach(function (e) {
                        var n = e.checked,
                          a = t.getCookie(s.name + "_" + e.cookie_suffix);
                        "deny" === a && (n = ""),
                          "allow" === a && (n = "checked"),
                          (o += i.elements.switch
                            .replace(
                              /\{\{cc\-cookietype\-id\}\}/g,
                              e.cookie_suffix
                            )
                            .replace(/\{\{label\}\}/g, e.label)
                            .replace(/\{\{checked\}\}/g, n)
                            .replace(/\{\{disabled\}\}/g, e.disabled)
                            .replace(/\{\{theme\}\}/g, i.theme));
                      }),
                        (i.elements.messageswitchlink =
                          i.elements.messageswitchlink
                            .replace(/\{\{allswitches\}\}/g, o)
                            .replace(
                              "{{allswitchesclasses}}",
                              function () {
                                positionStyle = r.call(this);
                                var e = ["cc-" + positionStyle];
                                this.customStyleSelector &&
                                  e.push(this.customStyleSelector);
                                return e;
                              }
                                .call(this)
                                .join(" ")
                            ));
                    }
                    Object.keys(i.elements).forEach(function (o) {
                      e[o] = t.interpolateString(i.elements[o], function (e) {
                        var t = i.content[e];
                        return e && "string" == typeof t && t.length ? t : "";
                      });
                    });
                    var n = i.compliance[i.type];
                    n || (n = i.compliance.info);
                    e.compliance = t.interpolateString(n, function (t) {
                      return e[t];
                    });
                    var a = (function (e) {
                      if (!e.showCloseX) return e.layouts[e.layout];
                      if ("detailed" === e.type || "detailedRev" === e.type)
                        return "x" !== e.content.close
                          ? e.layouts["detailed-closeCustomText"]
                          : e.layouts["detailed-close"];
                      if ("x" !== e.content.close)
                        return e.layouts["basic-closeCustomText"];
                      return e.layouts["basic-close"];
                    })(i);
                    a || (a = i.layouts.basic);
                    return t.interpolateString(a, function (t) {
                      return e[t];
                    });
                  }.call(this)
                );
              this.options.makeButtonsEqual &&
                (s = (s = s.replace("cc-highlight", "")).replace(
                  "cc-first-highlight",
                  ""
                ));
              var n = this.options.overrideHTML;
              if (
                ("string" == typeof n && n.length && (s = n),
                this.options.static)
              ) {
                var a = p.call(this, '<div class="cc-grower">' + s + "</div>");
                (a.style.display = ""),
                  (this.element = a.firstChild),
                  (this.element.style.display = "none"),
                  t.addClass(this.element, "cc-invisible");
              } else this.element = p.call(this, s);
              (function () {
                var i = this.setStatus.bind(this),
                  o = this.close.bind(this),
                  s = this.options.dismissOnTimeout,
                  n = e.status.dismiss;
                "detailed" === this.options.type && (n = e.status.savesettings);
                "detailedRev" === this.options.type && (n = e.status.allowall);
                ("opt-in" !== this.options.type &&
                  "opt-out" !== this.options.type) ||
                  (n = e.status.allow);
                "number" == typeof s &&
                  s >= 0 &&
                  this.options.enabled &&
                  (this.dismissTimeout = window.setTimeout(function () {
                    i(n), o(!0);
                  }, Math.floor(s)));
                var a = this.options.dismissOnScroll;
                if ("number" == typeof a && a >= 0) {
                  var c = function (e) {
                    window.pageYOffset > Math.floor(a) &&
                      (i(n),
                      o(!0),
                      window.removeEventListener("scroll", c, {
                        passive: !0,
                      }),
                      (this.onWindowScroll = null));
                  };
                  this.options.enabled &&
                    ((this.onWindowScroll = c),
                    window.addEventListener("scroll", c, {
                      passive: !0,
                    }));
                }
                var l = this.options.dismissOnWindowClick,
                  r = this.options.ignoreClicksFrom;
                if (l) {
                  var h = function (e) {
                    for (
                      var s = !1, a = e.path.length, c = r.length, l = 0;
                      l < a;
                      l++
                    )
                      if (!s)
                        for (var u = 0; u < c; u++)
                          s || (s = t.hasClass(e.path[l], r[u]));
                    s ||
                      (i(n),
                      o(!0),
                      window.removeEventListener("click", h),
                      window.removeEventListener("touchend", h),
                      (this.onWindowClick = null));
                  }.bind(this);
                  this.options.enabled &&
                    ((this.onWindowClick = h),
                    window.addEventListener("click", h),
                    window.addEventListener("touchend", h));
                }
              }).call(this),
                function () {
                  t.isMobile() && (this.options.animateRevokable = !1);
                  if (1 == this.options.revokable) {
                    var e = l.call(this);
                    this.options.animateRevokable && e.push("cc-animate"),
                      this.customStyleSelector &&
                        e.push(this.customStyleSelector);
                    var i = this.options.revokeBtn
                      .replace("{{classes}}", e.join(" "))
                      .replace("{{policy}}", this.options.content.policy);
                    this.revokeBtn = p.call(this, i);
                    var o = this.revokeBtn;
                    if (this.options.animateRevokable) {
                      var s = t.throttle(function (e) {
                        var i = !1,
                          s = window.innerHeight - 20;
                        t.hasClass(o, "cc-top") && e.clientY < 20 && (i = !0),
                          t.hasClass(o, "cc-bottom") &&
                            e.clientY > s &&
                            (i = !0),
                          i
                            ? t.hasClass(o, "cc-active") ||
                              t.addClass(o, "cc-active")
                            : t.hasClass(o, "cc-active") &&
                              t.removeClass(o, "cc-active");
                      }, 200);
                      (this.onMouseMove = s),
                        window.addEventListener("mousemove", s);
                    }
                  }
                }.call(this),
                this.options.autoOpen && this.autoOpen(),
                function () {
                  try {
                    links = document.querySelectorAll(
                      'a[id="nsc_bar_link_show_banner"]'
                    );
                  } catch (e) {
                    links = [];
                  }
                  if (
                    ((this.shortCodeLink = function () {
                      this.revokeChoice();
                    }.bind(this)),
                    links.length > 0)
                  )
                    for (var e = 0; e < links.length; e += 1)
                      links[e].addEventListener("click", this.shortCodeLink);
                }.call(this);
            }
          }),
          (s.prototype.destroy = function () {
            this.onButtonClick &&
              this.element &&
              (this.element.removeEventListener("click", this.onButtonClick),
              this.element.removeEventListener("keyup", this.onButtonClick),
              (this.onButtonClick = null)),
              this.dismissTimeout &&
                (clearTimeout(this.dismissTimeout),
                (this.dismissTimeout = null)),
              this.onWindowScroll &&
                (window.removeEventListener("scroll", this.onWindowScroll),
                (this.onWindowScroll = null)),
              this.onWindowClick &&
                (window.removeEventListener("click", this.onWindowClick),
                (this.onWindowClick = null)),
              this.onMouseMove &&
                (window.removeEventListener("mousemove", this.onMouseMove),
                (this.onMouseMove = null)),
              this.element &&
                this.element.parentNode &&
                this.element.parentNode.removeChild(this.element),
              (this.element = null),
              this.revokeBtn &&
                this.revokeBtn.parentNode &&
                this.revokeBtn.parentNode.removeChild(this.revokeBtn),
              (this.revokeBtn = null),
              this.blockingScreen &&
                this.blockingScreen.parentNode &&
                this.blockingScreen.parentNode.removeChild(this.blockingScreen),
              (this.blockingScreen = null),
              (function (i) {
                if (t.isPlainObject(i)) {
                  var o = t.hash(JSON.stringify(i)),
                    s = e.customStyles[o];
                  if (s && !--s.references) {
                    var n = s.element.ownerNode;
                    n && n.parentNode && n.parentNode.removeChild(n),
                      (e.customStyles[o] = null);
                  }
                }
              })(this.options.palette),
              (this.options = null);
          }),
          (s.prototype.open = function (t) {
            if (this.element) {
              if (!this.isOpen()) {
                if (
                  (function () {
                    if (1 != this.options.blockScreen) return !1;
                    var e = this.options.blockingScreen;
                    (this.blockingScreen = p.call(this, e)),
                      (this.blockingScreen.style.display = "");
                  }.call(this),
                  e.hasTransition
                    ? this.fadeIn()
                    : (this.element.style.display = ""),
                  1 == this.options.revokable && this.toggleRevokeButton(),
                  this.options.onPopupOpen.call(this),
                  this.options.statsCountOpens)
                ) {
                  var i = n.call(this);
                  i += 1;
                  try {
                    localStorage.setItem(
                      "beautiful_cookie_banner_open_counter",
                      i
                    );
                  } catch (e) {
                    return void console.error(e);
                  }
                }
                if (this.options.statsSendOnOpen) {
                  var o = h.call(this, "banner_open");
                  u.call(this, o);
                }
              }
              return this;
            }
          }),
          (s.prototype.close = function (t) {
            if (this.element)
              return (
                this.isOpen() &&
                  (e.hasTransition
                    ? this.fadeOut()
                    : (this.element.style.display = "none"),
                  this.blockingScreen &&
                    this.blockingScreen.parentNode &&
                    this.blockingScreen.parentNode.removeChild(
                      this.blockingScreen
                    ),
                  (this.blockingScreen = null),
                  t &&
                    1 == this.options.revokable &&
                    this.toggleRevokeButton(!0),
                  this.options.onPopupClose.call(this)),
                this
              );
          }),
          (s.prototype.fadeIn = function () {
            var i = this.element;
            if (
              e.hasTransition &&
              i &&
              (this.afterTransition && c.call(this, i),
              t.hasClass(i, "cc-invisible"))
            ) {
              if (((i.style.display = ""), this.options.static)) {
                var o = this.element.clientHeight;
                this.element.parentNode.style.maxHeight = o + "px";
              }
              this.openingTimeout = setTimeout(a.bind(this, i), 20);
            }
          }),
          (s.prototype.fadeOut = function () {
            var i = this.element;
            e.hasTransition &&
              i &&
              (this.openingTimeout &&
                (clearTimeout(this.openingTimeout), a.bind(this, i)),
              t.hasClass(i, "cc-invisible") ||
                (this.options.static &&
                  (this.element.parentNode.style.maxHeight = ""),
                (this.afterTransition = c.bind(this, i)),
                i.addEventListener(e.transitionEnd, this.afterTransition),
                t.addClass(i, "cc-invisible")));
          }),
          (s.prototype.isOpen = function () {
            return (
              this.element &&
              "" == this.element.style.display &&
              (!e.hasTransition || !t.hasClass(this.element, "cc-invisible"))
            );
          }),
          (s.prototype.toggleRevokeButton = function (e) {
            this.revokeBtn && (this.revokeBtn.style.display = e ? "" : "none");
          }),
          (s.prototype.revokeChoice = function (e) {
            (this.options.enabled = !0),
              this.clearStatus(),
              this.options.onRevokeChoice.call(this),
              e || this.autoOpen();
          }),
          (s.prototype.hasAnswered = function (t) {
            return Object.keys(e.status).indexOf(this.getStatus()) >= 0;
          }),
          (s.prototype.hasConsented = function (t) {
            var i = this.getStatus();
            return (
              i == e.status.allow ||
              i == e.status.dismiss ||
              i == e.status.allowall
            );
          }),
          (s.prototype.autoOpen = function (e) {
            !this.hasAnswered() && this.options.enabled
              ? this.open()
              : this.hasAnswered() &&
                1 == this.options.revokable &&
                this.toggleRevokeButton(!0);
          }),
          (s.prototype.setStatus = function (i) {
            var o = this.options.cookie,
              s = t.getCookie(o.name);
            Object.keys(e.status).indexOf(s);
            Object.keys(e.status).indexOf(i) >= 0
              ? (t.setCookie(
                  o.name,
                  i,
                  o.expiryDays,
                  o.domain,
                  o.path,
                  o.secure
                ),
                function (e) {
                  var i = this.options,
                    o = this.options.cookie,
                    s = h.call(this, e);
                  i.cookietypes &&
                    i.cookietypes.forEach(function (i) {
                      try {
                        var n;
                        (n =
                          "allowall" == e
                            ? "allow"
                            : document.querySelector(
                                "input[id=" + i.cookie_suffix + "]"
                              ).checked
                            ? "allow"
                            : "deny"),
                          t.setCookie(
                            o.name + "_" + i.cookie_suffix,
                            n,
                            o.expiryDays,
                            o.domain,
                            o.path,
                            o.secure
                          ),
                          s.cookieTypeConsent.push({
                            name: i.cookie_suffix,
                            status: n,
                          });
                      } catch (e) {}
                    });
                  (function () {
                    try {
                      localStorage.removeItem(
                        "beautiful_cookie_banner_open_counter"
                      );
                    } catch (e) {
                      console.error(e);
                    }
                  }).call(this),
                    u.call(this, s);
                }.call(this, i),
                1 == this.options.onStatusChange &&
                  (function (e, t, i, o, s) {
                    var n = {
                      event: "beautiful_cookie_consent_updated",
                    };
                    (n.statusBefore = t), "dismiss" === e && (e = "allow");
                    n.cookieconsent_status = e;
                    for (var a = 0, c = o.length; a < c; a += 1) {
                      var l = document.cookie.match(
                          "(^|;)\\s*" +
                            s +
                            "_" +
                            o[a].cookie_suffix +
                            "\\s*=\\s*([^;]+)"
                        ),
                        r = l ? l.pop() : "";
                      r &&
                        (n["cookieconsent_status_" + o[a].cookie_suffix] = r);
                    }
                    (window[i] = window[i] || []), window[i].push(n);
                  })(
                    i,
                    s,
                    this.options.dataLayerName,
                    this.options.cookietypes,
                    this.options.cookie.name
                  ),
                "function" == typeof window.nsc_bar_set_status_callback &&
                  window.nsc_bar_set_status_callback(i))
              : this.clearStatus();
          }),
          (s.prototype.getStatus = function () {
            return t.getCookie(this.options.cookie.name);
          }),
          (s.prototype.clearStatus = function () {
            var e = this.options.cookie;
            t.setCookie(e.name, "", -1, e.domain, e.path);
          }),
          s
        );
      })()),
      (e.Location = (function () {
        var e = {
          timeout: 5e3,
          services: ["ipinfo"],
          serviceDefinitions: {
            ipinfo: function () {
              return {
                url: "//ipinfo.io",
                headers: ["Accept: application/json"],
                callback: function (e, t) {
                  try {
                    var i = JSON.parse(t);
                    return i.error
                      ? n(i)
                      : {
                          code: i.country,
                        };
                  } catch (e) {
                    return n({
                      error: "Invalid response (" + e + ")",
                    });
                  }
                },
              };
            },
            ipinfodb: function (e) {
              return {
                url: "//api.ipinfodb.com/v3/ip-country/?key={api_key}&format=json&callback={callback}",
                isScript: !0,
                callback: function (e, t) {
                  try {
                    var i = JSON.parse(t);
                    return "ERROR" == i.statusCode
                      ? n({
                          error: i.statusMessage,
                        })
                      : {
                          code: i.countryCode,
                        };
                  } catch (e) {
                    return n({
                      error: "Invalid response (" + e + ")",
                    });
                  }
                },
              };
            },
            maxmind: function () {
              return {
                url: "//js.maxmind.com/js/apis/geoip2/v2.1/geoip2.js",
                isScript: !0,
                callback: function (e) {
                  window.geoip2
                    ? geoip2.country(
                        function (t) {
                          try {
                            e({
                              code: t.country.iso_code,
                            });
                          } catch (t) {
                            e(n(t));
                          }
                        },
                        function (t) {
                          e(n(t));
                        }
                      )
                    : e(
                        new Error(
                          "Unexpected response format. The downloaded script should have exported `geoip2` to the global scope"
                        )
                      );
                },
              };
            },
          },
        };

        function i(i) {
          t.deepExtend((this.options = {}), e),
            t.isPlainObject(i) && t.deepExtend(this.options, i),
            (this.currentServiceIndex = -1);
        }

        function o(e, t, i) {
          var o,
            s = document.createElement("script");
          (s.type = "text/" + (e.type || "javascript")),
            (s.src = e.src || e),
            (s.async = !1),
            (s.onreadystatechange = s.onload =
              function () {
                var e = s.readyState;
                clearTimeout(o),
                  t.done ||
                    (e && !/loaded|complete/.test(e)) ||
                    ((t.done = !0),
                    t(),
                    (s.onreadystatechange = s.onload = null));
              }),
            document.body.appendChild(s),
            (o = setTimeout(function () {
              (t.done = !0), t(), (s.onreadystatechange = s.onload = null);
            }, i));
        }

        function s(e, t, i, o, s) {
          var n = new (window.XMLHttpRequest || window.ActiveXObject)(
            "MSXML2.XMLHTTP.3.0"
          );
          if (
            (n.open(o ? "POST" : "GET", e, 1),
            n.setRequestHeader(
              "Content-type",
              "application/x-www-form-urlencoded"
            ),
            Array.isArray(s))
          )
            for (var a = 0, c = s.length; a < c; ++a) {
              var l = s[a].split(":", 2);
              n.setRequestHeader(
                l[0].replace(/^\s+|\s+$/g, ""),
                l[1].replace(/^\s+|\s+$/g, "")
              );
            }
          "function" == typeof t &&
            (n.onreadystatechange = function () {
              n.readyState > 3 && t(n);
            }),
            n.send(o);
        }

        function n(e) {
          return new Error("Error [" + (e.code || "UNKNOWN") + "]: " + e.error);
        }
        return (
          (i.prototype.getNextService = function () {
            var e;
            do {
              e = this.getServiceByIdx(++this.currentServiceIndex);
            } while (
              this.currentServiceIndex < this.options.services.length &&
              !e
            );
            return e;
          }),
          (i.prototype.getServiceByIdx = function (e) {
            var i = this.options.services[e];
            if ("function" == typeof i) {
              var o = i();
              return (
                o.name &&
                  t.deepExtend(o, this.options.serviceDefinitions[o.name](o)),
                o
              );
            }
            return "string" == typeof i
              ? this.options.serviceDefinitions[i]()
              : t.isPlainObject(i)
              ? this.options.serviceDefinitions[i.name](i)
              : null;
          }),
          (i.prototype.locate = function (e, t) {
            var i = this.getNextService();
            i
              ? ((this.callbackComplete = e),
                (this.callbackError = t),
                this.runService(i, this.runNextServiceOnError.bind(this)))
              : t(new Error("No services to run"));
          }),
          (i.prototype.setupUrl = function (e) {
            var t = this.getCurrentServiceOpts();
            return e.url.replace(/\{(.*?)\}/g, function (i, o) {
              if ("callback" === o) {
                var s = "callback" + Date.now();
                return (
                  (window[s] = function (t) {
                    e.__JSONP_DATA = JSON.stringify(t);
                  }),
                  s
                );
              }
              if (o in t.interpolateUrl) return t.interpolateUrl[o];
            });
          }),
          (i.prototype.runService = function (e, t) {
            var i = this;
            e &&
              e.url &&
              e.callback &&
              (e.isScript ? o : s)(
                this.setupUrl(e),
                function (o) {
                  var s = o ? o.responseText : "";
                  e.__JSONP_DATA &&
                    ((s = e.__JSONP_DATA), delete e.__JSONP_DATA),
                    i.runServiceCallback.call(i, t, e, s);
                },
                this.options.timeout,
                e.data,
                e.headers
              );
          }),
          (i.prototype.runServiceCallback = function (e, t, i) {
            var o = this,
              s = t.callback(function (t) {
                s || o.onServiceResult.call(o, e, t);
              }, i);
            s && this.onServiceResult.call(this, e, s);
          }),
          (i.prototype.onServiceResult = function (e, t) {
            t instanceof Error || (t && t.error)
              ? e.call(this, t, null)
              : e.call(this, null, t);
          }),
          (i.prototype.runNextServiceOnError = function (e, t) {
            if (e) {
              this.logError(e);
              var i = this.getNextService();
              i
                ? this.runService(i, this.runNextServiceOnError.bind(this))
                : this.completeService.call(
                    this,
                    this.callbackError,
                    new Error("All services failed")
                  );
            } else this.completeService.call(this, this.callbackComplete, t);
          }),
          (i.prototype.getCurrentServiceOpts = function () {
            var e = this.options.services[this.currentServiceIndex];
            return "string" == typeof e
              ? {
                  name: e,
                }
              : "function" == typeof e
              ? e()
              : t.isPlainObject(e)
              ? e
              : {};
          }),
          (i.prototype.completeService = function (e, t) {
            (this.currentServiceIndex = -1), e && e(t);
          }),
          (i.prototype.logError = function (e) {
            var t = this.currentServiceIndex,
              i = this.getServiceByIdx(t);
            console.warn(
              "The service[" +
                t +
                "] (" +
                i.url +
                ") responded with the following error",
              e
            );
          }),
          i
        );
      })()),
      (e.Law = (function () {
        var e = {
          regionalLaw: !0,
          hasLaw: [
            "AT",
            "BE",
            "BG",
            "HR",
            "CZ",
            "CY",
            "DK",
            "EE",
            "FI",
            "FR",
            "DE",
            "EL",
            "HU",
            "IE",
            "IT",
            "LV",
            "LT",
            "LU",
            "MT",
            "NL",
            "NO",
            "PL",
            "PT",
            "SK",
            "ES",
            "SE",
            "GB",
            "UK",
            "GR",
            "EU",
            "RO",
          ],
          revokable: [
            "HR",
            "CY",
            "DK",
            "EE",
            "FR",
            "DE",
            "LV",
            "LT",
            "NL",
            "NO",
            "PT",
            "ES",
          ],
          explicitAction: ["HR", "IT", "ES", "NO"],
        };

        function i(e) {
          this.initialise.apply(this, arguments);
        }
        return (
          (i.prototype.initialise = function (i) {
            t.deepExtend((this.options = {}), e),
              t.isPlainObject(i) && t.deepExtend(this.options, i);
          }),
          (i.prototype.get = function (e) {
            var t = this.options;
            return {
              hasLaw: t.hasLaw.indexOf(e) >= 0,
              revokable: t.revokable.indexOf(e) >= 0,
              explicitAction: t.explicitAction.indexOf(e) >= 0,
            };
          }),
          (i.prototype.applyLaw = function (e, t) {
            var i = this.get(t);
            return (
              i.hasLaw ||
                ((e.enabled = !1),
                "function" == typeof e.onNoCookieLaw && e.onNoCookieLaw(t, i)),
              this.options.regionalLaw &&
                (i.revokable && (e.revokable = !0),
                i.explicitAction &&
                  ((e.dismissOnScroll = !1), (e.dismissOnTimeout = !1))),
              e
            );
          }),
          i
        );
      })()),
      (e.initialise = function (i, o, s) {
        var n = new e.Law(i.law);
        ("detailed" != i.type && "detailedRev" != i.type) ||
          (i.layout = "detailed"),
          o || (o = function () {}),
          s || (s = function () {});
        var a = Object.keys(e.status),
          c = t.getCookie("cookieconsent_status");
        a.indexOf(c) >= 0
          ? o(new e.Popup(i))
          : e.getCountryCode(
              i,
              function (t) {
                delete i.law,
                  delete i.location,
                  t.code && (i = n.applyLaw(i, t.code)),
                  o(new e.Popup(i));
              },
              function (t) {
                delete i.law, delete i.location, s(t, new e.Popup(i));
              }
            );
      }),
      (e.getCountryCode = function (t, i, o) {
        t.law && t.law.countryCode
          ? i({
              code: t.law.countryCode,
            })
          : t.location
          ? new e.Location(t.location).locate(function (e) {
              i(e || {});
            }, o)
          : i({});
      }),
      (e.utils = t),
      (e.hasInitialised = !0),
      (window.cookieconsent = e);
  }
})(window.cookieconsent || {});
// window.addEventListener("load", function () {
//   window.cookieconsent.initialise({
//     content: {
//       deny: "Deny",
//       dismiss: "Got it",
//       allow: "Allow",
//       link: "Learn more",
//       href: "https://www.helidecks.org/privacy/",
//       message:
//         "This website uses cookies to ensure you get the best experience on our website.",
//       policy: "Cookie Settings",
//       savesettings: "Save Settings",
//       target: "_blank",
//       linksecond: "Just another Link",
//       hrefsecond: "https://www.helidecks.org/",
//     },
//     type: "info",
//     palette: {
//       popup: {
//         background: "#1B355D",
//         text: "#fff",
//       },
//       button: {
//         background: "#fff",
//         text: "#E8842D",
//         border: "",
//       },
//       switches: {
//         background: "",
//         backgroundChecked: "",
//         switch: "",
//         text: "",
//       },
//     },
//     position: "bottom-right",
//     theme: "block",
//     cookietypes: [
//       {
//         label: "Technical",
//         checked: "checked",
//         disabled: "disabled",
//         cookie_suffix: "tech",
//       },
//       {
//         label: "Marketing",
//         checked: "",
//         disabled: "",
//         cookie_suffix: "marketing",
//       },
//     ],
//     revokable: "1",
//     dataLayerName: "dataLayer",
//     improveBannerLoadingSpeed: "0",
//     container: "",
//     customizedFont: "",
//     cookie: {
//       name: "cookieconsent_status",
//       domain: "",
//       expiryDays: "365",
//     },
//   });
// });
jQuery.fn.extend({
  formSubmit: function () {
    let form = jQuery(this);
    let success = form.find(".form-message");
    jQuery.ajax({
      url: php_vars.mail_script,
      type: "post",
      dataType: "json",
      data: form.serialize(),
      success: function (data) {
        if (data.admin === !0) {
          clearForm(form);
          success.show();
        } else {
          alert("Some errors happens, please try again");
        }
      },
      error: function (xhr, err) {
        alert("Some errors happens, please try again");
      },
    });
    return !1;
  },
});

function clearForm(form) {
  jQuery("#solution").value = "";
  $(":input", form).each(function () {
    let type = this.type;
    let disabled = jQuery(this).prop("disable");
    let tag = this.tagName.toLowerCase();
    if (
      type === "text" ||
      type === "password" ||
      type === "email" ||
      type === "tel" ||
      tag === "textarea"
    )
      this.value = "";
    else if (type === "checkbox" || type === "radio") this.checked = !1;
    else if (tag === "select")
      if (!disabled) {
        this.selectedIndex = -1;
      }
  });
}
jQuery(document).ready(function () {
  jQuery(".validate").each(function () {
    jQuery(this).validate({
      errorPlacement: (error, element) => {},
      submitHandler: function (form) {
        jQuery(form).formSubmit();
      },
      ignore: [],
    });
  });
});
jQuery(function () {
  jQuery(document).on("click", ".single_add_to_cart_button", function (e) {
    e.preventDefault();
    let popup = jQuery("#added_to_cart_modal");
    let button = jQuery(this),
      form = button.closest("form.cart"),
      product_qty = 1,
      product_id = button.attr("data-product_id"),
      variation_id = 0;
    let data = {
      action: "woocommerce_ajax_add_to_cart",
      product_id: product_id,
      product_sku: "",
      quantity: product_qty,
      variation_id: variation_id,
    };
    jQuery(document.body).trigger("adding_to_cart", [button, data]);
    jQuery.ajax({
      type: "post",
      url: wc_add_to_cart_params.ajax_url,
      data: data,
      beforeSend: function (response) {
        button.removeClass("added").addClass("loading");
      },
      complete: function (response) {
        button.addClass("added").removeClass("loading");
      },
      success: function (response) {
        if (response.error & response.product_url) {
          window.location = response.product_url;
          return;
        } else {
          jQuery(document.body).trigger("added_to_cart", [
            response.fragments,
            response.cart_hash,
          ]);
          popup.fadeIn(400).modal("show");
          setTimeout(function () {
            popup.modal("hide");
          }, 2000);
        }
      },
    });
    return !1;
  });
});
